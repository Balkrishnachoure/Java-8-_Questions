package com.example.demo;

import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.Consumer;
import java.util.function.IntPredicate;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Demo2 {
    public static void main(String[] args) {
        List<Integer> LL =  new ArrayList<>() ;
         for( int i =0 ; i< 10000 ;i++)
         {
              LL.add(i) ;
         }
     // Using AtomicInteger To Ensure Thred Safety
        AtomicInteger counter = new AtomicInteger() ;

         LL.parallelStream().forEach(
           num->{
               int currentCounter = counter.getAndIncrement() ;
               System.out.println( "Processing Element" +num+ " With counter"+counter );

         // We can write Any consumer logic here .
               try
               {
                   Thread.sleep(10);
               }catch (InterruptedException e)
               {
                   e.printStackTrace();
               }
           }
         );
    }
}
