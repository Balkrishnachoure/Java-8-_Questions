Palindrome Check: Write a program to check if a string is a palindrome.

Fibonacci Sequence: Write a program to generate the Fibonacci sequence up to a given number.

Factorial Calculation: Write a program to calculate the factorial of a number.

Prime Number Check: Write a program to check if a number is prime.

Anagram Check: Write a program to determine if two strings are anagrams of each other.

Reverse a String: Write a program to reverse a given string.

Count Vowels and Consonants: Write a program to count the number of vowels and consonants in a string.

Find the Largest and Smallest Number in an Array: Write a program to find the largest and smallest number in an array.

Sum of Digits: Write a program to find the sum of digits of a given number.

Armstrong Number Check: Write a program to check if a number is an Armstrong number.

Count the Occurrences of Each Character: Write a program to count the number of occurrences of each character in a string.

Bubble Sort: Write a program to implement the bubble sort algorithm.

Find the Missing Number: Write a program to find the missing number in a given array of integers.

Check for Balanced Parentheses: Write a program to check if the parentheses in a string are balanced.

Rotate an Array: Write a program to rotate an array to the left or right.


Palindrome Check: Write a program to check if a string is a palindrome.

String str = "level";
        String revString = "";
        char[] ch = str.toCharArray();
        for (int i = ch.length - 1; i >= 0; i--) {
            revString = revString.concat(String.valueOf(ch[i]));
        }
        if (str.equals(revString)) {
            System.out.println("palindrome");
        } else {
            System.out.println("not palindrome");
        }
		
Fibonacci Sequence: Write a program to generate the Fibonacci sequence up to a given number.


int upto = 10;
        int a = 0;
        int b = 1;
        for (int i = 0; i < upto; i++) {
            int c = a + b;
            System.out.print(c + ",");
            a = b;
            b = c;
        }
		
Factorial Calculation: Write a program to calculate the factorial of a number.

int num = 4;
        int fact = 1;
        for (int i = 1; i <= num; i++) {
            fact = fact * i;
        }
        System.out.print("factorial = " + fact);
		

Prime Number Check: Write a program to check if a number is prime.

 int num = 29;
        boolean isPrime = true;
        if (num < 1) {
            isPrime = false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                isPrime = false;
                break;
            }
        }

        if (isPrime){
            System.out.print("prime number");
        }else {
            System.out.print("not prime number");
        }
		
Anagram Check: Write a program to determine if two strings are anagrams of each other.
 String str1 = "listenn";
        String str2 = "silent";

        char[] ch1 = str1.toCharArray();
        char[] ch2 = str2.toCharArray();

        Map<Character, Integer> map1 = new HashMap<>();
        Map<Character, Integer> map2 = new HashMap<>();

        for (int i = 0; i < ch1.length; i++) {
            map1.put(ch1[i], map1.getOrDefault(ch1[i], 0) + 1);
        }

        for (int i = 0; i < ch2.length; i++) {
            map2.put(ch2[i], map2.getOrDefault(ch2[i], 0) + 1);
        }

        if (map1.equals(map2)) {
            System.out.println("Anagram");
        }else{
            System.out.println("not anagram");
        }


Reverse a String: Write a program to reverse a given string.

String str = "aadil";
String rev = "";
char[] ch = str.toCharArray();
for(int i = ch.length - 1 ; i>=0 ; i--){

rev = rev.concat(String.valueOf(ch[i]));
}

System.out.println(rev);


Count Vowels and Consonants: Write a program to count the number of vowels and consonants in a string.

int vowels = 0;
int consonants = 0;


String str = "dbasuidguafbia";

 for (int i = 0; i < str.length(); i++) {
           
		   char ch = str.charAt(i);
		   
		if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
		vowels ++;
		   }else{
		   consonants ++;
		   }
        }
		
		System.out.println("Vowels : "+vowels+" Consonants :"+consonants);
		
Find the Largest and Smallest Number in an Array: Write a program to find the largest and smallest number in an array.
int[] arr = {1, 3, 55, 44, 6, 778, 3, 5, 999, 1, 4, 5};
        int largest = arr[0];
        int smallest = arr[0];
        for (int j : arr) {
            if (j > largest) {
                largest = j;
            }
            if (j < smallest) {
                smallest = j;
            }
        }
        System.out.println("smallest: " + smallest);
        System.out.println("largest: " + largest);
		
		
Sum of Digits: Write a program to find the sum of digits of a given number.

  int num = 12345;
        int sum = 0;
        while (num !=0) {
            sum = sum + (num % 10);
            num = num / 10;
        }
        System.out.println("sum: " + sum);
		
Armstrong Number Check: Write a program to check if a number is an Armstrong number.
 int num = 154;
        int originalNum = num;
        int sum = 0;
        int digits = String.valueOf(num).length();
        while (num != 0) {
            int digit = num % 10;
            sum = (int) (sum + Math.pow(digit, digits));
            num = num / 10;
        }
        if (originalNum == sum) {
            System.out.println("Armstrong ");
        } else {
            System.out.println("not Armstrong ");
        }

Bubble Sort: Write a program to implement the bubble sort algorithm.


		int[] arr = {1, 3, 5, 4, 6, 7, 3, 5, 9, 1, 4, 5,10};
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }

        for (int a : arr){
            System.out.print(a);
        }



		 
		 
